---
import Layout from './Base.astro';
import Navigation from '../components/Navigation.astro';
import TableOfContents from '../components/TableOfContents.astro';
import PrevNextNavigation from '../components/PrevNextNavigation.astro';

import type { MarkdownHeading } from 'astro';
import type * as CONFIG from '../config';
import { navigation } from '../config';

type Props = {
  frontmatter: CONFIG.Frontmatter;
  headings: MarkdownHeading[];
};

const { frontmatter, headings } = Astro.props as Props;

const currentPage = Astro.url.pathname;
const currentPageMatch = currentPage.endsWith('/')
  ? currentPage.slice(0, -1)
  : currentPage.slice(0);
const currentSection = navigation.find((section) =>
  section.links.find((link) => link.link == currentPageMatch)
);
---

<Layout frontmatter={frontmatter}>
  <div class="mx-auto grid max-w-7xl gap-4 md:grid-cols-12">
    <div class="hidden md:col-span-3 md:block">
      <aside class="sticky top-20 px-4 py-16">
        <Navigation currentPage={currentPage} navigation={navigation} />
      </aside>
    </div>
    <div class="min-w-0 max-w-2xl px-4 py-16 md:col-span-9 lg:col-span-6">
      <article>
        <header class="space-y-2">
          {
            currentSection && (
              <span class=" bg-gradient-to-r from-red-600 via-pink-600 to-violet-500 bg-clip-text text-sm font-medium text-transparent">
                {currentSection.title}
              </span>
            )
          }
          <h1 class="text-4xl font-semibold">{frontmatter?.title}</h1>
        </header>

        <div
          class="prose prose-lg prose-pre:scrollbar:w-1.5 prose-pre:scrollbar:h-1.5 prose-pre:scrollbar:bg-transparent prose-pre:scrollbar-track:bg-gray-800 prose-pre:scrollbar-track:rounded prose-pre:scrollbar-thumb:bg-gray-600 prose-pre:scrollbar-thumb:rounded prose-h2:scroll-mt-24 prose-h3:scroll-mt-24 dark:prose-invert mt-6"
        >
          <slot />
        </div>
      </article>
      <PrevNextNavigation />
    </div>
    <div class="hidden lg:col-span-3 lg:block">
      <aside class="sticky top-20 px-4 py-16">
        {headings.length > 0 && <TableOfContents headings={headings} />}
      </aside>
    </div>
  </div>
</Layout>
