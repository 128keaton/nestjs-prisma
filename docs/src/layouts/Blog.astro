---
import Layout from './Layout.astro';
import Navigation from '../components/Navigation.astro';
import TableOfContents from '../components/TableOfContents.astro';

import type { MarkdownHeading } from 'astro';
import type * as CONFIG from '../config';
import { navigation } from '../config';

type Props = {
  frontmatter: CONFIG.Frontmatter;
  headings: MarkdownHeading[];
};

const { frontmatter, headings } = Astro.props as Props;

const currentPage = Astro.url.pathname;
const currentSection = navigation.find((section) =>
  section.links.find((link) => link.link == currentPage)
);
const links = navigation.flatMap((section) => section.links);
const linkIndex = links.findIndex((link) => link.link === currentPage);
const previousPage = links[linkIndex - 1];
const nextPage = links[linkIndex + 1];
---

<Layout title={frontmatter.title}>
  <div class="mx-auto max-w-7xl grid gap-4 md:grid-cols-12">
    <aside class="hidden md:block md:col-span-3 px-4 py-16">
      <Navigation currentPage={currentPage} navigation={navigation} />
    </aside>
    <div class="min-w-0 max-w-2xl md:col-span-9 lg:col-span-6 px-4 py-16">
      <article>
        <header class="space-y-2">
          {
            currentSection && (
              <span class=" bg-gradient-to-r from-red-600 via-pink-600 to-violet-500 bg-clip-text text-sm font-medium text-transparent">
                {currentSection.title}
              </span>
            )
          }
          <h1 class="text-3xl font-semibold">{frontmatter.title}</h1>
        </header>

        <div class="mt-6 prose">
          <slot />
        </div>
      </article>
      <div class="mt-12 flex border-t pt-4">
        {
          previousPage && (
            <div>
              <p class="text-sm font-medium">Previous</p>
              <div class="mt-1">
                <a
                  href={previousPage.link}
                  class="text-base font-semibold text-gray-500 hover:text-gray-600"
                >
                  <span aria-hidden="true">&larr;</span> {previousPage.title}
                </a>
              </div>
            </div>
          )
        }

        {
          nextPage && (
            <div class="ml-auto text-right">
              <p class="text-sm font-medium">Next</p>
              <div class="mt-1 ">
                <a
                  href={nextPage.link}
                  class="text-base font-semibold text-gray-500 hover:text-gray-600"
                >
                  {nextPage.title} <span aria-hidden="true">&rarr;</span>
                </a>
              </div>
            </div>
          )
        }
      </div>
    </div>
    <aside class="hidden lg:block lg:col-span-3 px-4 py-16">
      {headings.length > 0 && <TableOfContents headings={headings} />}
    </aside>
  </div>
</Layout>
